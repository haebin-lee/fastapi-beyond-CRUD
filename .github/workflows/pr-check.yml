name: PR Title Check

on:
  pull_request:
    types: [opened, synchronize, reopened, edited]

jobs:
  check-pr-title:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Check PR Title
        id: check-title
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          PATTERN="^(feat|fix|docs|style|refactor|test|chore)(\([a-z-]+\))?: .+"

          if [[ ! "$PR_TITLE" =~ $PATTERN ]]; then
            echo "PR title '$PR_TITLE' does not follow conventional commit format"
            echo "failed=true" >> $GITHUB_OUTPUT
            exit 1
          fi

      - name: Check Commit Messages
        id: check-commits
        run: |
          # Fetch the PR refs
          git fetch origin pull/${{ github.event.pull_request.number }}/head:pr-branch

          # Get the base branch name
          BASE_BRANCH="${{ github.event.pull_request.base.ref }}"
          echo "Base branch is: $BASE_BRANCH"

          # Get commit messages
          echo "Getting commits between origin/$BASE_BRANCH and pr-branch"
          COMMITS=$(git log origin/$BASE_BRANCH..pr-branch --format=%s)
          echo "Commits to check:"
          echo "$COMMITS"     

          # Initialize variables
          FAILED=false
          INVALID_COMMITS=""

          PATTERN="^(feat|fix|docs|style|refactor|test|chore)(\([a-z-]+\))?: .+"

          while IFS= read -r COMMIT; do
            # Fixed: "$commit" to "$COMMIT" in the first condition
            if [[ ! -z "$COMMIT" ]] && [[ ! "$COMMIT" =~ $PATTERN ]]; then
              FAILED=true
              INVALID_COMMITS="$INVALID_COMMITS\n$COMMIT"
            fi
          done <<< "$COMMITS"

          # Fixed: syntax error in if statement, added semicolon or newline
          if [ "$FAILED" = true ]; then 
            echo "Invalid commits found:"
            echo -e "$INVALID_COMMITS"
            echo "invalid_commits<<EOF" >> $GITHUB_OUTPUT
            echo -e "$INVALID_COMMITS" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
            # Fixed: added exit code 1 for failure
            exit 1
          fi

      - name: Success Notification
        if: success()
        run: |
          python -m src.notify \
            --subject "PR Check Passed: Conforming Commit Messages" \
            --body "PR #${{ github.event.pull_request.number }} has passed the commit message check."

      - name: Close PR and Send Notification
        if: failure()
        run: |
          gh pr close ${{ github.event.pull_request.number }} --comment "PR is being closed because the title does not follow the Conventional Commits specification. Please rename your PR to follow the format: type(scope): description"

          python -m src.notify \
            --subject "PR Check Failed: Non-conforming Commit Messages" \
            --body "PR #${{ github.event.pull_request.number }} has been closed due to non-conforming commit messages."
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
